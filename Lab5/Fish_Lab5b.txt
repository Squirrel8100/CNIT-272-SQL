/*
Logan Fish
CNIT 27200 Spring 2021
Lab Time: Thursday 2:30
Duration: yes
*********************Question 1*********************************
*/

SELECT SUPPLIERID, COMPANYNAME, CONTACTNAME
FROM SUPPLIER
WHERE SUPPLIERID NOT IN (SELECT SUPPLIERID FROM SUPPLIEDPART WHERE SUPPLIERID IS NOT NULL);
--RESULTS
/*

SUPPLIERID COMPANYNAME                    CONTACTNAME         
---------- ------------------------------ --------------------
AM-450     Computer Club                  Rob Thomas          
PA-385     Wearable Techies               Julie Evans         
PA-399     Secure Solutions               Johanna Tighe       
SE-450     Security Associates            Gina Wendal         
SE-455     Cyber Tech                     Robert Case         
*/

--*********************Question 2*********************************
SET LINESPACE 200;
SELECT part.partnumber, part.unitcost, supply.supplierid, supply.companyname, supply.state
FROM SUPPLIER SUPPLY INNER JOIN SUPPLIEDPART PART
ON SUPPLY.SUPPLIERID = PART.SUPPLIERID
WHERE supply.state LIKE '%NM%' or supply.state like '%AZ%' AND part.unitcost < '500';
--RESULTS
/*
PARTNUMBER   UNITCOST SUPPLIERID COMPANYNAME                    ST
---------- ---------- ---------- ------------------------------ --
MIC-010        134.85 MSN-105    Computer Medic                 AZ
BRK-010        124.65 MSN-105    Computer Medic                 AZ
PRT-003         419.4 NA-450     Cables and Kits                NM
MOD-003        125.97 NA-450     Cables and Kits                NM
ADT-006        289.85 NA-450     Cables and Kits                NM
PS-001         167.22 PA-384     Cyber Saver                    AZ
PS-002         285.56 PA-384     Cyber Saver                    AZ
PS-003         283.88 PA-384     Cyber Saver                    AZ

8 rows selected. 
*/

--*********************Question 3A*********************************
SELECT custord.orderid, COUNT(custoline.partnumber) AS TOTAL_PARTS, SUM(custoline.unitprice) AS TOTAL_AMT, MIN(custoline.unitprice) AS MIN_PRICE, MAX(custoline.unitprice) AS MAX_PRICE 
FROM CUSTOMER CUST INNER JOIN CUSTORDER CUSTORD
ON CUST.CUSTOMERID = CUSTORD.CUSTOMERID
INNER JOIN CUSTORDERLINE CUSTOLINE
ON CUSTORD.ORDERID = CUSTOLINE.ORDERID
WHERE cust.customerid LIKE '%I-200157%'
GROUP BY custord.orderid;
--RESULTS
/*
ORDERID    TOTAL_PARTS  TOTAL_AMT  MIN_PRICE  MAX_PRICE
---------- ----------- ---------- ---------- ----------
3001000521           3     239.91       9.99     139.99
3001000668           1    1846.79    1846.79    1846.79
3000000383           1        129        129        129
3001000607           3    1341.32       29.5      49.99
3001000515           4     221.76       1.99      39.99
*/

--*********************Question 3B*********************************
SELECT custord.orderid, COUNT(custoline.partnumber) AS TOTAL_PARTS, SUM(custoline.unitprice) AS TOTAL_AMT, MIN(custoline.unitprice) AS MIN_PRICE, MAX(custoline.unitprice) AS MAX_PRICE 
FROM CUSTOMER CUST INNER JOIN CUSTORDER CUSTORD
ON CUST.CUSTOMERID = CUSTORD.CUSTOMERID
INNER JOIN CUSTORDERLINE CUSTOLINE
ON CUSTORD.ORDERID = CUSTOLINE.ORDERID
WHERE cust.customerid LIKE '%I-200157%'  
GROUP BY custord.orderid
HAVING SUM(custoline.unitprice) > 200;
-- RESULTS
/*
ORDERID    TOTAL_PARTS  TOTAL_AMT  MIN_PRICE  MAX_PRICE
---------- ----------- ---------- ---------- ----------
3001000521           3     219.93       9.99     139.99
3001000668           1    1846.79    1846.79    1846.79
*/



--*********************Question 4*********************************
SELECT custord.orderid, custord.orderdate, ship.shipname, CUST.CUSTFIRSTNAME || ' ' || CUST.CUSTLASTNAME as REQUESTED_BY, cust.state
FROM CUSTOMER CUST INNER JOIN CUSTORDER CUSTORD
ON CUST.CUSTOMERID = CUSTORD.CUSTOMERID
INNER JOIN SHIPMENT SHIP
ON CUSTORD.ORDERID = SHIP.ORDERID
WHERE shipmentid NOT IN (SELECT shipmentid FROM PACKINGSLIP WHERE PACKAGENUMBER IS NOT NULL);
--RESULTS
/*
ORDERID    ORDERDATE SHIPNAME             REQUESTED_BY                         ST
---------- --------- -------------------- ------------------------------------ --
3001000750 13-MAR-20 Louise Hamilton      Louise Cool                          ID
3001000790 27-MAR-20 Verna McGrew         Verna McGrew                         AL
3001000802 30-MAR-20 Charles Jones        Jamie Thompson                       GA
3000000030 13-JUL-19 Jim Manaugh          David Tietz                          MN
3001000667 23-FEB-20 Zack Hill            John Skadberg                        KY
3001000804 30-MAR-20 Mary Jo Wales        Mary Jo Wales                        OR
3001000798 29-MAR-20 Tom Baker            Tom Baker                            KY
3001000806 31-MAR-20 Daniel Rodkey        Daniel Rodkey                        CO
3001000791 27-MAR-20 Michelle Oakley      Steven Yaun                          IN
3001000808 31-MAR-20 Andy Huegel          Andy Huegel                          DE
3001000796 29-MAR-20 Jill Reece           Janet Reece                          MA

ORDERID    ORDERDATE SHIPNAME             REQUESTED_BY                         ST
---------- --------- -------------------- ------------------------------------ --
3001000797 29-MAR-20 Archie Doremski      Richard Kluth                        DE
3001000805 31-MAR-20 Marjorie Vandermay   Kevin Zubarev                        MI
3001000800 30-MAR-20 Orville Gilliland    Kelly Jordan                         FL
3001000807 31-MAR-20 Cecil Scheetz        Courtney Cortez                      CT
3001000801 30-MAR-20 Larry Osmanova       Sonny Nagel                          CT
3001000803 30-MAR-20 Shirley Osborne      Shirley Osborne                      GA
3001000799 29-MAR-20 Kelly Brook          Karen Mangus                         FL
3001000703 01-MAR-20 Joan Hedden          Joan Hedden                          AR

19 rows selected. 
*/
--*********************Question 5*********************************
SELECT shipper.shipperid, shipper.shippername, shipper.contactname, shipper.emailaddr, count(ship.shipmentid)
FROM SHIPMENT SHIP INNER JOIN SHIPPER SHIPPER
ON SHIPPER.SHIPPERID = SHIP.SHIPPERID
GROUP BY shipper.shipperid, shipper.shippername, shipper.contactname, shipper.emailaddr
ORDER BY shipper.shippername;
--RESULTS
/*
 SHIPPERID SHIPPERNAME               CONTACTNAME          EMAILADDR                                          COUNT(SHIP.SHIPMENTID)
---------- ------------------------- -------------------- -------------------------------------------------- ----------------------
         1 Argen Shipping            Tim Mantel           tmantel@argen.com                                                     138
         2 Channel Express           Gloria Trackner      gtrackner@chexpress.com                                               159
         3 Federal Express           Michael Emilson      emike@fedex.com                                                       164
         8 Mail Hub                  Christine Roush      croush@mailhub.com                                                     37
         6 Next Day Air              Lana Brown           lanab@nda.com                                                          51
         5 Shipping Experts          Greg Hemmel          ghemmel@shipex.com                                                     81
         4 U.S. Postal Service       Suzanne Carroll      suzyc@usps.gov                                                        139
         7 United Parcel Service     Julia Rosewill       juliar@ups.com                                                         37

8 rows selected. 
*/
--*********************Question 6*********************************
COL TOTALCOST FORMAT $99,999.99;
COL PAYMENTS FORMAT $99,999.99;
SELECT purch.purchorderid, purch.dateordered, supply.contactname, SUM(pline.orderedunitcost) as TOTALCOST, SUM(pline.orderedunitcost / 3) as PAYMENTS, ROUND(AVG(SUPART.SHIPPINGLAG), 2)
FROM SUPPLIER SUPPLY INNER JOIN SUPPLIEDPART SUPART
ON SUPPLY.SUPPLIERID = SUPART.SUPPLIERID
INNER JOIN PURCHORDERLINE PLINE
ON SUPART.SUPPLIERID = PLINE.SUPPLIERID
AND supart.catalognumber = pline.catalognumber
INNER JOIN PURCHASEORDER PURCH
ON supply.supplierid = purch.supplierid
AND purch.purchorderid = pline.purchorderid
GROUP BY  purch.purchorderid, purch.dateordered, supply.contactname;
--RESULTS
/*
PURCHORDER DATEORDER CONTACTNAME           TOTALCOST   PAYMENTS ROUND(AVG(SUPART.SHIPPINGLAG),2)
---------- --------- -------------------- ---------- ---------- --------------------------------
EE99-006   23-MAY-20 Kelli Jones            8,700.31   2,900.10                              1.8
EE99-012   27-JUL-20 Darlene Jenkins        4,588.78   1,529.59                             2.67
EE99-015   13-AUG-20 Thurman Mezzo          1,501.48     500.49                             2.25
EE99-002   26-APR-20 Travis Honn           10,540.20   3,513.40                              3.2
EE99-017   04-SEP-20 Stephen Bird          22,327.84   7,442.61                              2.4
EE99-004   20-MAY-20 Paul Smith             4,123.31   1,374.44                              2.6
EE99-014   08-AUG-20 Alice Mynhier          1,904.03     634.68                              2.4
EE99-022   06-SEP-20 William Newlon         6,290.75   2,096.92                                3
EE99-021   06-SEP-20 Debra Cruz             2,111.07     703.69                              2.5
EE99-001   12-APR-20 Dorothy Beering       10,628.87   3,542.96                             3.14
EE99-009   27-JUL-20 Wade Holle             6,991.27   2,330.42                                3

PURCHORDER DATEORDER CONTACTNAME           TOTALCOST   PAYMENTS ROUND(AVG(SUPART.SHIPPINGLAG),2)
---------- --------- -------------------- ---------- ---------- --------------------------------
EE99-027   10-SEP-20 Gordon Mayes          19,409.09   6,469.70                             2.58
EE99-010   27-JUL-20 Lance Andrews          7,795.82   2,598.61                             2.17
EE99-023   07-SEP-20 Jennie Fry            16,549.50   5,516.50                             2.92
EE99-008   26-JUL-20 Timothy Neal           3,070.80   1,023.60                                3
EE99-016   03-SEP-20 Adam Cyr               4,039.28   1,346.43                             2.45
EE99-019   05-SEP-20 David Becker           2,879.16     959.72                              1.5
EE99-028   10-SEP-20 Pam Krick             16,526.06   5,508.69                              2.8
EE99-011   27-JUL-20 Yauleng Depoe          4,604.04   1,534.68                                2
EE99-007   24-MAY-20 Sandy Goodman          2,370.57     790.19                             3.25
EE99-024   09-SEP-20 Jamie Pickett          9,759.13   3,253.04                             3.13
EE99-029   10-SEP-20 Donald Blythe          1,438.89     479.63                             2.67

PURCHORDER DATEORDER CONTACTNAME           TOTALCOST   PAYMENTS ROUND(AVG(SUPART.SHIPPINGLAG),2)
---------- --------- -------------------- ---------- ---------- --------------------------------
EE99-005   23-MAY-20 Gary Mikels            7,792.07   2,597.36                                2
EE99-013   08-AUG-20 Kevin Martin           5,017.97   1,672.66                             3.25
EE99-018   05-SEP-20 Elizabeth Clark       16,087.52   5,362.51                              2.5
EE99-026   10-SEP-20 Tim White                739.40     246.47                              2.5
EE99-003   20-MAY-20 Brenda Pritchett      20,056.19   6,685.40                             2.67

27 rows selected. 
*/

--*********************Question 7*********************************
select CUST.customerid, CUST.emailaddr, CUSTORD.orderdate, SHIPPER.shippername, SUM(CUSTOLINE.unitprice * CUSTOLINE.orderquantity) as totalprice
from customer CUST inner join custorder CUSTORD
on CUST.customerid = custord.customerid
inner join custorderline CUSTOLINE
on custord.orderid = custoline.orderid
inner join shipment SHIP
on custoline.orderid = ship.orderid
inner join shipper SHIPPER 
on SHIPPER.shipperid = SHIP.shipperid
where (To_char(custord.orderdate, 'fmYYYY') LIKE '2019') AND (cust.state LIKE '%CA%' OR cust.state LIKE '%WA%')
GROUP BY CUST.customerid, CUST.emailaddr, CUSTORD.orderdate, SHIPPER.shippername
HAVING SUM(custoline.unitprice * custoline.orderquantity) < 500
ORDER BY CUSTORD.orderdate;
--RESULTS
/*
CUSTOMERID EMAILADDR                                          ORDERDATE SHIPPERNAME               TOTALPRICE
---------- -------------------------------------------------- --------- ------------------------- ----------
I-200004   jjordan@zohomail.com                               02-JUL-19 Federal Express               188.94
I-200033   richerj@yahoo.com                                  29-JUL-19 Federal Express                67.95
C-200004   cgatz@accela.com                                   04-AUG-19 Federal Express                441.5
I-200004   jjordan@zohomail.com                               19-AUG-19 Federal Express               266.58
I-200100   rcollins@live.com                                  07-OCT-19 Next Day Air                  280.93
I-200027   dsharp@gmail.com                                   08-OCT-19 U.S. Postal Service           151.93
I-200100   rcollins@live.com                                  29-OCT-19 Next Day Air                  167.94
C-200015   burnskaren@gmail.com                               02-NOV-19 Next Day Air                     299
C-200004   cgatz@accela.com                                   09-NOV-19 U.S. Postal Service            299.8
I-200027   dsharp@gmail.com                                   30-NOV-19 U.S. Postal Service           429.83
I-200004   jjordan@zohomail.com                               01-DEC-19 Channel Express               179.87

CUSTOMERID EMAILADDR                                          ORDERDATE SHIPPERNAME               TOTALPRICE
---------- -------------------------------------------------- --------- ------------------------- ----------
C-200018   ahoover@granicus.com                               08-DEC-19 U.S. Postal Service           307.83
I-200100   rcollins@live.com                                  16-DEC-19 U.S. Postal Service           188.93

13 rows selected. 
*/
--*********************Question 8*********************************
SELECT custord.orderid, custord.orderdate, cust.emailaddr, ipart.stockprice, ipart.partdescription, cat.categoryname
FROM CUSTOMER CUST INNER JOIN CUSTORDER CUSTORD
ON CUST.CUSTOMERID = CUSTORD.CUSTOMERID
INNER JOIN CUSTORDERLINE CUSTOLINE
ON CUSTORD.ORDERID = CUSTOLINE.ORDERID
INNER JOIN INVENTORYPART IPART
ON CUSTOLINE.PARTNUMBER = IPART.PARTNUMBER
INNER JOIN CATEGORY CAT
ON IPART.CATEGORYID = CAT.CATEGORYID
where to_char(custord.orderdate, 'fmMON-YYYY') = 'MAR-2020' and (cust.emailaddr like '%gmail%' or cust.emailaddr like '%yahoo%') and ipart.stockprice > '200';
--results
/*ORDERID    ORDERDATE EMAILADDR                                          STOCKPRICE PARTDESCRIPTION                                    CATEGORYNAME                  
---------- --------- -------------------------------------------------- ---------- -------------------------------------------------- ------------------------------
3001000707 01-MAR-20 dchang@yahoo.com                                      1226.16 Basic 3.6 GHZ INTEL CORE I7                        Computers                     
3001000716 03-MAR-20 mshade33@yahoo.com                                      299.4 LASER JET 2000SE                                   Accessories                   
3001000763 17-MAR-20 laurie@yahoo.com                                       960.37 Basic AMD ATHLON X2                                Computers                     
3001000743 10-MAR-20 mswatson@gmail.com                                     257.99 850 ATHLON PROCESSOR                               Processors                    
3001000730 07-MAR-20 rstahley@gmail.com                                     457.99 SOCKET MINI BAREBONE                               Basics                        
3001000798 29-MAR-20 tbaker@yahoo.com                                       803.76 FLY L                                              Computers                     
3001000806 31-MAR-20 dannie@yahoo.com                                      1211.76 Basic PRESTIEGE 8000 TOWER PC                      Computers                     
3001000766 17-MAR-20 marcw332@gmail.com                                    1227.09 FLY XPST                                           Computers                     
3001000769 20-MAR-20 vacation@gmail.com                                    1341.76 Basic PRESTIEGE 8100 MID TOWER PC                  Computers                     
3001000776 21-MAR-20 storage@gmail.com                                      969.35 Basic G1850 XEON                                   Computers                     
3001000760 16-MAR-20 sign3@gmail.com                                        969.35 Basic G1850 XEON                                   Computers                     

ORDERID    ORDERDATE EMAILADDR                                          STOCKPRICE PARTDESCRIPTION                                    CATEGORYNAME                  
---------- --------- -------------------------------------------------- ---------- -------------------------------------------------- ------------------------------
3001000760 16-MAR-20 sign3@gmail.com                                        460.79 850 AMD RYZEN PROCESSOR                            Processors                    
3001000739 09-MAR-20 supplycrafts@gmail.com                                1177.49 Basic PRETIEGE 9000                                Computers                     
3001000775 21-MAR-20 matsm@gmail.com                                        457.99 SOCKET MINI BAREBONE                               Basics                        
3001000706 01-MAR-20 jjones@gmail.com                                       803.76 FLY L                                              Computers                     

15 rows selected. 
*/

--*********************Question 9*********************************
SELECT PRO.ecnumber, PRO.partnumber, PRO.processid, op.instruction
FROM PROCESS PRO INNER JOIN OPERATION OP
ON pro.ecnumber = op.ecnumber
AND pro.processid = op.processid
AND pro.partnumber = op.partnumber
WHERE (OP.ECNUMBER LIKE '%PACK-007%' OR op.ecnumber LIKE '%ASSEM-007%') AND op.operationstep LIKE '%LABEL%';
--RESULTS

/*
ECNUMBER   PARTNUMBER PROCESSID  INSTRUCTION                                  
---------- ---------- ---------- ---------------------------------------------
ASSEM-007  CTR-007    ASSEMBLY   PRINT AND APPLY MAILING LABEL                
PACK-007   DVD-001    SHIP       PRINT AND APPLY MAILING LABEL                
PACK-007   DVD-002    SHIP       PRINT AND APPLY MAILING LABEL                
*/


--*********************Question 10*********************************
SELECT custord.orderid, custord.orderdate, cust.companyname, cust.state
FROM CUSTOMER CUST INNER JOIN CUSTORDER CUSTORD
ON CUST.CUSTOMERID = CUSTORD.CUSTOMERID
WHERE (to_char(custord.orderdate, 'fmYYYY') LIKE '2019' OR to_char(custord.orderdate, 'fmYYYY') LIKE '2020') AND cust.companyname LIKE '%System%'
order by custord.orderdate;
--results
/*
ORDERID    ORDERDATE COMPANYNAME                              ST
---------- --------- ---------------------------------------- --
3000000124 25-AUG-19 Gan Systems                              FL
3000000140 31-AUG-19 Gan Systems                              FL
3000000189 21-SEP-19 Gan Systems                              FL
3000000306 11-NOV-19 Gan Systems                              FL
3000000477 16-DEC-19 Fire Alarm Systems                       UT
3001000536 20-JAN-20 Fire Alarm Systems                       UT

6 rows selected. 
*/

--*********************Question 11*********************************
--Explain how nested queries operate
--nested queries operate like nested minitured sql statements. when they are ran the results are tehn used within the query as a comparrison or
--to filter results by a further step. 

--*********************Question 12*********************************
--Explain the inner join syntax for two tables. Explain how to join two tables with a composite PK. 
--How is it different than a single attribute PK? How is it similar?
-- to inner join two tables you must use use the from clause to connect the tables with an inner join. then an on clause immediately after is used to 
--join the tables keys. Composite PKs must be added on to the on clause using an and, and connecting the keys. It is different because the combination
--requires all the keys to be present and connected with their parent/child. 

--*********************Question 13*********************************
--How is the syntax for inner joins different when you add a 3rd table? 
--Explain how to do it as if you were explaining it verbally to someone else learning it for the first time.
-- the syntax is different with more than a 3rd table where after you connect two tables right after the on statement it is simply
--written as "inner join table alias" and then an on statment comparing the keys. slightly different than "table inner join table."



--*********************Question 14*********************************
--Explain the difference between a table alias and a column alias.
-- a table alias is creating an alias name for a table and all the attributes in it. 
--A column alias is a nickname in place of the column title.

--*********************Question 15*********************************
--Explain what happens if you do not join all of the composite PK attributes. 
--Test it. Detail the result and interpret it.
--If you do not join all the pk attributes the table will no properly join and you will not get correct results. 
-- the query will try to pull upon attributes that are not found, and it will cause it to break and not work.

